global proc shelf_Bumpybox () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Studio Library" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import tapp.maya.studiolibrary\ntapp.maya.studiolibrary.main()" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Studio Library" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import studiolibrary\nstudiolibrary.main()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select source, then target." 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import os\nimport tempfile\nimport shutil\n\nimport pymel.core\n\nfrom..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "AnimTransfer" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import os\nimport tempfile\nimport shutil\n\nimport pymel.core\n\nfrom studiolibraryitems import animitem\n\n\ndef get_all_nodes(node_list):\n    nodes = []\n    children = pm.listRelatives(\n        node_list[0].root(), allDescendents=True, type=\"transform\"\n    )\n    for node in children:\n        if node.name().endswith(\"_cnt\"):\n            nodes.append(node.name())\n    return nodes\n\nsrc, trg = pymel.core.ls(selection=True)\n\npath = os.path.join(tempfile.gettempdir(), \"transfer.anim\")\n\nif os.path.exists(path):\n    shutil.rmtree(path)\n\nitem = animitem.AnimItem(path)\nitem.save(\n    objects=get_all_nodes([src]),\n    startFrame=pymel.core.playbackOptions(\n        query=True,\n        animationStartTime=True\n    ),\n    endFrame=pymel.core.playbackOptions(\n        query=True,\n        animationEndTime=True\n    ),\n    bakeConnected=False\n)\n\nitem.load(\n    objects=get_all_nodes([trg]),\n    namespaces=[],\n    option=animitem.PasteOption.ReplaceCompletely,\n    connect=False,\n    currentTime=False\n)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Playblast" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import capture_gui\ncapture_gui.main()" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Playblast" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import capture_gui\ncapture_gui.main()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
