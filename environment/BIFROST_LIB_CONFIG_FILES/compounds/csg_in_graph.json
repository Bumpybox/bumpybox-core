{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///Core_Array_reverse_array.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///string_to_array.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds.json"
        },
        {
            "uri": "file:///point_nodedefs.json"
        },
        {
            "uri": "file:///find_orthogonal_vectors.json"
        },
        {
            "uri": "file:///create_mesh_cube.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///update_mesh_normals.json"
        },
        {
            "uri": "file:///set_point_normal.json"
        },
        {
            "uri": "file:///create_mesh_sphere.json"
        },
        {
            "uri": "file:///converters_types.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///get_position_property.json"
        },
        {
            "uri": "file:///compute_voxel_scale.json"
        },
        {
            "uri": "file:///converters_nodedefs.json"
        },
        {
            "uri": "file:///post_process_level_set.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///compute_fog_density.json"
        },
        {
            "uri": "file:///delete_level_set.json"
        },
        {
            "uri": "file:///if_compute_volume.json"
        },
        {
            "uri": "file:///mesh_to_volume.json"
        },
        {
            "uri": "file:///query_nodedefs.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "User::Compounds::csg_in_graph",
            "uriImported": "file:///csg_in_graph.json",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input"
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "out_geometry"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "ports": [
                {
                    "portName": "out_geometry",
                    "portDirection": "output",
                    "portType": "Amino::Object"
                }
            ],
            "compounds": [
                {
                    "name": "iterate_csg_intersect",
                    "uriImported": "file:///csg_in_graph.json",
                    "metadata": [
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,min"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,negate"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,max"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Constants,default_value"
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "-265.286 -212 1442.57 918"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "max_iterations"
                                                        },
                                                        {
                                                            "metaName": "current_index"
                                                        },
                                                        {
                                                            "metaName": "data"
                                                        },
                                                        {
                                                            "metaName": "data1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "maximum"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "ports": [
                        {
                            "portName": "max_iterations",
                            "portDirection": "input",
                            "portType": "long",
                            "portIterationLimit": "true"
                        },
                        {
                            "portName": "current_index",
                            "portDirection": "input",
                            "portType": "long",
                            "portIterationCounter": "true"
                        },
                        {
                            "portName": "data",
                            "portDirection": "input"
                        },
                        {
                            "portName": "data1",
                            "portDirection": "input"
                        },
                        {
                            "portName": "maximum",
                            "portDirection": "output",
                            "portIterationTarget": "true"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "max",
                            "nodeType": "Core::Math::max",
                            "multiInPortNames": [
                                "data",
                                "value"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "606 -36"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_from_array",
                            "nodeType": "Core::Array::get_from_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "13.0139 -195.955"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_from_array1",
                            "nodeType": "Core::Array::get_from_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "24.2021 137.439"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "max.maximum",
                            "target": ".maximum"
                        },
                        {
                            "source": "get_from_array.value",
                            "target": "max.first.data"
                        },
                        {
                            "source": "get_from_array1.value",
                            "target": "max.first.value"
                        },
                        {
                            "source": ".current_index",
                            "target": "get_from_array.index"
                        },
                        {
                            "source": ".current_index",
                            "target": "get_from_array1.index"
                        },
                        {
                            "source": ".data",
                            "target": "get_from_array.array"
                        },
                        {
                            "source": ".data1",
                            "target": "get_from_array1.array"
                        }
                    ],
                    "values": [],
                    "iterateCompound": {
                        "ports": []
                    }
                },
                {
                    "name": "iterate_csg_subtract",
                    "uriImported": "file:///csg_in_graph.json",
                    "metadata": [
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,min"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,negate"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,max"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Constants,default_value"
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "-255.198 -212 1387.09 882.692"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "max_iterations"
                                                        },
                                                        {
                                                            "metaName": "current_index"
                                                        },
                                                        {
                                                            "metaName": "data"
                                                        },
                                                        {
                                                            "metaName": "data1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "maximum"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "ports": [
                        {
                            "portName": "max_iterations",
                            "portDirection": "input",
                            "portType": "long",
                            "portIterationLimit": "true"
                        },
                        {
                            "portName": "current_index",
                            "portDirection": "input",
                            "portType": "long",
                            "portIterationCounter": "true"
                        },
                        {
                            "portName": "data",
                            "portDirection": "input"
                        },
                        {
                            "portName": "data1",
                            "portDirection": "input"
                        },
                        {
                            "portName": "maximum",
                            "portDirection": "output",
                            "portIterationTarget": "true"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "max",
                            "nodeType": "Core::Math::max",
                            "multiInPortNames": [
                                "data",
                                "negated"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "606.418 -35.5776"
                                }
                            ]
                        },
                        {
                            "nodeName": "negate",
                            "nodeType": "Core::Math::negate",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "335.745 85.7374"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_from_array",
                            "nodeType": "Core::Array::get_from_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "45.3421 -91.8508"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_from_array1",
                            "nodeType": "Core::Array::get_from_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "28.5284 227.331"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "max.maximum",
                            "target": ".maximum"
                        },
                        {
                            "source": "negate.negated",
                            "target": "max.first.negated"
                        },
                        {
                            "source": "get_from_array.value",
                            "target": "max.first.data"
                        },
                        {
                            "source": "get_from_array1.value",
                            "target": "negate.value"
                        },
                        {
                            "source": ".current_index",
                            "target": "get_from_array.index"
                        },
                        {
                            "source": ".current_index",
                            "target": "get_from_array1.index"
                        },
                        {
                            "source": ".data",
                            "target": "get_from_array.array"
                        },
                        {
                            "source": ".data1",
                            "target": "get_from_array1.array"
                        }
                    ],
                    "values": [],
                    "iterateCompound": {
                        "ports": []
                    }
                },
                {
                    "name": "iterate_csg_union",
                    "uriImported": "file:///csg_in_graph.json",
                    "metadata": [
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,min"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,negate"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,max"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Constants,default_value"
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "-446.921 -308.432 1499.69 954.346"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "max_iterations"
                                                        },
                                                        {
                                                            "metaName": "current_index"
                                                        },
                                                        {
                                                            "metaName": "data"
                                                        },
                                                        {
                                                            "metaName": "data1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "maximum"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "ports": [
                        {
                            "portName": "max_iterations",
                            "portDirection": "input",
                            "portType": "long",
                            "portIterationLimit": "true"
                        },
                        {
                            "portName": "current_index",
                            "portDirection": "input",
                            "portType": "long",
                            "portIterationCounter": "true"
                        },
                        {
                            "portName": "data",
                            "portDirection": "input"
                        },
                        {
                            "portName": "data1",
                            "portDirection": "input"
                        },
                        {
                            "portName": "maximum",
                            "portDirection": "output",
                            "portIterationTarget": "true"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "get_from_array",
                            "nodeType": "Core::Array::get_from_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "13 -196"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_from_array1",
                            "nodeType": "Core::Array::get_from_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "24 137"
                                }
                            ]
                        },
                        {
                            "nodeName": "min",
                            "nodeType": "Core::Math::min",
                            "multiInPortNames": [
                                "value",
                                "value1"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "475.394 -30.8109"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "get_from_array.value",
                            "target": "min.first.value"
                        },
                        {
                            "source": "get_from_array1.value",
                            "target": "min.first.value1"
                        },
                        {
                            "source": "min.minimum",
                            "target": ".maximum"
                        },
                        {
                            "source": ".current_index",
                            "target": "get_from_array.index"
                        },
                        {
                            "source": ".current_index",
                            "target": "get_from_array1.index"
                        },
                        {
                            "source": ".data",
                            "target": "get_from_array.array"
                        },
                        {
                            "source": ".data1",
                            "target": "get_from_array1.array"
                        }
                    ],
                    "values": [],
                    "iterateCompound": {
                        "ports": []
                    }
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "iterate_csg_intersect",
                    "nodeType": "iterate_csg_intersect",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1269.78 -89.2353"
                        }
                    ]
                },
                {
                    "nodeName": "iterate_csg_subtract",
                    "nodeType": "iterate_csg_subtract",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1274.54 -433.227"
                        }
                    ]
                },
                {
                    "nodeName": "iterate_csg_union",
                    "nodeType": "iterate_csg_union",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1268.45 272.939"
                        }
                    ]
                },
                {
                    "nodeName": "array_size",
                    "nodeType": "Core::Array::array_size",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1004.12 -85.3647"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_cube",
                    "nodeType": "Modeling::Primitive::create_mesh_cube",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-442.167 63.0388"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_sphere",
                    "nodeType": "Modeling::Primitive::create_mesh_sphere",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-440 -320"
                        }
                    ]
                },
                {
                    "nodeName": "float3_array",
                    "valueType": "array<Math::float3>",
                    "metadata": [
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "189.817 272.393"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        }
                    ]
                },
                {
                    "nodeName": "float_array",
                    "valueType": "array<float>",
                    "metadata": [
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "296.106 -309.886"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        }
                    ]
                },
                {
                    "nodeName": "get_geo_property__voxel_position",
                    "nodeType": "Geometry::Properties::get_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "456.395 218.887"
                        }
                    ]
                },
                {
                    "nodeName": "get_geo_property__voxel_signed_distance",
                    "nodeType": "Geometry::Properties::get_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "542.583 -383.869"
                        }
                    ]
                },
                {
                    "nodeName": "mesh_to_volume",
                    "nodeType": "Geometry::Converters::mesh_to_volume",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-74 -392"
                        }
                    ]
                },
                {
                    "nodeName": "mesh_to_volume1",
                    "nodeType": "Geometry::Converters::mesh_to_volume",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-67.2464 70.6205"
                        }
                    ]
                },
                {
                    "nodeName": "sample_volume__voxel_signed_distance",
                    "nodeType": "Geometry::Query::sample_volume",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "729.762 212.516"
                        }
                    ]
                },
                {
                    "nodeName": "set_geo_property",
                    "nodeType": "Geometry::Properties::set_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1657.95 -479.015"
                        }
                    ]
                },
                {
                    "nodeName": "update_voxel_position",
                    "nodeType": "Geometry::Volume::update_voxel_position",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "245.688 -512.429"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "get_geo_property__voxel_signed_distance.data",
                    "target": "array_size.array"
                },
                {
                    "source": "update_voxel_position.out_volume",
                    "target": "get_geo_property__voxel_position.geometry"
                },
                {
                    "source": "float3_array.output",
                    "target": "get_geo_property__voxel_position.type"
                },
                {
                    "source": "update_voxel_position.out_volume",
                    "target": "get_geo_property__voxel_signed_distance.geometry"
                },
                {
                    "source": "float_array.output",
                    "target": "get_geo_property__voxel_signed_distance.type"
                },
                {
                    "source": "array_size.size",
                    "target": "iterate_csg_intersect.max_iterations"
                },
                {
                    "source": "get_geo_property__voxel_signed_distance.data",
                    "target": "iterate_csg_intersect.data"
                },
                {
                    "source": "sample_volume__voxel_signed_distance.sampled_data",
                    "target": "iterate_csg_intersect.data1"
                },
                {
                    "source": "array_size.size",
                    "target": "iterate_csg_subtract.max_iterations"
                },
                {
                    "source": "get_geo_property__voxel_signed_distance.data",
                    "target": "iterate_csg_subtract.data"
                },
                {
                    "source": "sample_volume__voxel_signed_distance.sampled_data",
                    "target": "iterate_csg_subtract.data1"
                },
                {
                    "source": "array_size.size",
                    "target": "iterate_csg_union.max_iterations"
                },
                {
                    "source": "get_geo_property__voxel_signed_distance.data",
                    "target": "iterate_csg_union.data"
                },
                {
                    "source": "sample_volume__voxel_signed_distance.sampled_data",
                    "target": "iterate_csg_union.data1"
                },
                {
                    "source": "create_mesh_sphere.sphere_mesh",
                    "target": "mesh_to_volume.mesh"
                },
                {
                    "source": "create_mesh_cube.cube_mesh",
                    "target": "mesh_to_volume1.mesh"
                },
                {
                    "source": "mesh_to_volume1.volume",
                    "target": "sample_volume__voxel_signed_distance.volume"
                },
                {
                    "source": "get_geo_property__voxel_position.data",
                    "target": "sample_volume__voxel_signed_distance.positions"
                },
                {
                    "source": "mesh_to_volume.volume",
                    "target": "set_geo_property.geometry"
                },
                {
                    "source": "iterate_csg_subtract.maximum",
                    "target": "set_geo_property.data"
                },
                {
                    "source": "set_geo_property.out_geometry",
                    "target": ".out_geometry"
                },
                {
                    "source": "mesh_to_volume.volume",
                    "target": "update_voxel_position.volume"
                }
            ],
            "values": [
                {
                    "valueName": "iterate_csg_intersect.max_iterations",
                    "valueType": "long",
                    "value": "10"
                },
                {
                    "valueName": "iterate_csg_subtract.max_iterations",
                    "valueType": "long",
                    "value": "10"
                },
                {
                    "valueName": "iterate_csg_union.max_iterations",
                    "valueType": "long",
                    "value": "10"
                },
                {
                    "valueName": "create_mesh_cube.length",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_cube.width",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_cube.height",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_cube.position",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0.5f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "create_mesh_cube.up_axis",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "1f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "create_mesh_cube.base_to_pivot",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "create_mesh_sphere.radius",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_sphere.height_segments",
                    "valueType": "int",
                    "value": "14L"
                },
                {
                    "valueName": "create_mesh_sphere.axis_segments",
                    "valueType": "int",
                    "value": "20L"
                },
                {
                    "valueName": "create_mesh_sphere.position",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "create_mesh_sphere.up_axis",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "1f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "create_mesh_sphere.base_to_pivot",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "float3_array.value",
                    "valueType": "array<Math::float3>",
                    "value": []
                },
                {
                    "valueName": "float_array.value",
                    "valueType": "array<float>",
                    "value": [
                        "0f"
                    ]
                },
                {
                    "valueName": "get_geo_property__voxel_position.property",
                    "valueType": "string",
                    "value": "voxel_position"
                },
                {
                    "valueName": "get_geo_property__voxel_signed_distance.property",
                    "valueType": "string",
                    "value": "voxel_signed_distance"
                },
                {
                    "valueName": "mesh_to_volume.detail_size",
                    "valueType": "float",
                    "value": "0.0500000007f"
                },
                {
                    "valueName": "mesh_to_volume.enable_bandwidth",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "mesh_to_volume.bandwidth",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "mesh_to_volume.volume_mode",
                    "valueType": "Geometry::Converters::VolumeMode",
                    "value": "Solid"
                },
                {
                    "valueName": "mesh_to_volume.offset",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "mesh_to_volume.store_level_set",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "mesh_to_volume.store_fog_density",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "mesh_to_volume.fog_density",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "mesh_to_volume.properties",
                    "valueType": "string",
                    "value": "*"
                },
                {
                    "valueName": "mesh_to_volume.resolution_mode",
                    "valueType": "Geometry::Volume::ResolutionType",
                    "value": "Relative"
                },
                {
                    "valueName": "mesh_to_volume1.detail_size",
                    "valueType": "float",
                    "value": "0.0500000007f"
                },
                {
                    "valueName": "mesh_to_volume1.enable_bandwidth",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "mesh_to_volume1.bandwidth",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "mesh_to_volume1.volume_mode",
                    "valueType": "Geometry::Converters::VolumeMode",
                    "value": "Solid"
                },
                {
                    "valueName": "mesh_to_volume1.offset",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "mesh_to_volume1.store_level_set",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "mesh_to_volume1.store_fog_density",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "mesh_to_volume1.fog_density",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "mesh_to_volume1.properties",
                    "valueType": "string",
                    "value": "*"
                },
                {
                    "valueName": "mesh_to_volume1.resolution_mode",
                    "valueType": "Geometry::Volume::ResolutionType",
                    "value": "Relative"
                },
                {
                    "valueName": "sample_volume__voxel_signed_distance.property",
                    "valueType": "string",
                    "value": "voxel_signed_distance"
                },
                {
                    "valueName": "set_geo_property.property",
                    "valueType": "string",
                    "value": "voxel_signed_distance"
                },
                {
                    "valueName": "set_geo_property.default",
                    "valueType": "float",
                    "value": "100000f"
                },
                {
                    "valueName": "set_geo_property.target",
                    "valueType": "string",
                    "value": "voxel_tile_tree"
                },
                {
                    "valueName": "update_voxel_position.voxel_offset",
                    "valueType": "Geometry::Volume::VoxelOffset",
                    "value": "Corner"
                }
            ]
        }
    ]
}
